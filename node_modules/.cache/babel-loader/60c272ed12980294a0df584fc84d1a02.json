{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Desktop/time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { useCallback } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {}, []);\n  let comments;\n\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"no comment were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HrsqoF+cz5x+W3JvLxHQ6yWqDAQ=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","useHttp","classes","NewCommentForm","getAllComments","LoadingSpinner","CommentsList","useCallback","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","quoteId","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["/home/ahmed/Desktop/time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { useCallback } from \"react/cjs/react.production.min\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const { quoteId } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {}, []);\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">no comment were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onAddComment={addedCommentHandler} />\n      )}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;EAEA,MAAMa,MAAM,GAAGX,SAAS,EAAxB;EAEA,MAAM;IAAEY,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC;EAA7B,IAAgDd,OAAO,CAACG,cAAD,CAA7D;EAEA,MAAM;IAAEY;EAAF,IAAcL,MAApB;EACAZ,SAAS,CAAC,MAAM;IACda,WAAW,CAACI,OAAD,CAAX;EACD,CAFQ,EAEN,CAACA,OAAD,EAAUJ,WAAV,CAFM,CAAT;;EAGA,MAAMK,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMQ,mBAAmB,GAAGX,WAAW,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAvC;EACA,IAAIY,QAAJ;;EACA,IAAIN,MAAM,KAAK,SAAf,EAA0B;IACxBM,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIN,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACK,MAAf,GAAwB,CAAxE,EAA2E;IACzED,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEJ;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EACD,IACEF,MAAM,KAAK,WAAX,KACC,CAACE,cAAD,IAAmBA,cAAc,CAACK,MAAf,KAA0B,CAD9C,CADF,EAGE;IACAD,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,oBACE;IAAS,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACV,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEQ,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;MAAgB,OAAO,EAAEO,OAAzB;MAAkC,YAAY,EAAEE;IAAhD;MAAA;MAAA;MAAA;IAAA,QARJ,eAUE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAjDD;;GAAMX,Q;UAGWR,S,EAEuCC,O;;;KALlDO,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}